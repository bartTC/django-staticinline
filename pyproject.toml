[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "django-staticinline"
version = "1.5"
packages = [{include = "staticinline"}]
description = "Django template tag to load static files inline with your template."
keywords = ["django", "staticfiles", "inline", "performance"]
authors = ["Martin Mahner <martin@mahner.org>"]
license = "MIT"
homepage = "https://github.com/bartTC/django-staticinline"
readme = ["README.md", "CHANGELOG.md"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT 1.5License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django",
]

[tool.poetry.urls]
Source = "https://github.com/bartTC/django-staticinline"
Bugtracker = "https://github.com/bartTC/django-staticinline/issues"

[tool.poetry.dependencies]
python = "^3.9"
django = ">=3.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-django = "^4.8.0"
sphinx = "^7.3.7"
sphinx-autobuild = "^2024.4.16"
sphinx-book-theme = "^1.1.3"

[tool.ruff]
target-version = "py39"
exclude = ["migrations"]
lint.select = ["ALL"]
lint.ignore = [
  "ANN101",   # Missing Type Annotation for "self"
  "ANN401",   # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`"
  "ARG001",   # Unused function argument (request, ...)
  "ARG002",   # Unused method argument (*args, **kwargs)
  "D",        # Missing or badly formatted docstrings
  "FBT",      # Flake Boolean Trap (don't use arg=True in functions)
  "RUF012",   # Mutable class attributes https://github.com/astral-sh/ruff/issues/5243

  "COM812",   # (ruff format) Checks for the absence of trailing commas
  "ISC001",   # (ruff format) Checks for implicitly concatenated strings on a single line
]

[tool.ruff.lint.extend-per-file-ignores]
# Also ignore `E402` in all `__init__.py` files.
"test_*.py" = [
  "S101",     # S101 Use of `assert` detected
  "PLR2004",  # Magic value used in comparison,
]

[tool.mypy]
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
exclude = ".*/migrations/.*"

[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py"]
addopts = """
  --ds=staticinline.tests.testapp.settings
  --nomigrations
  --reuse-db
"""
filterwarnings = ["ignore::RuntimeWarning"]


